---
import mongoose from 'mongoose';
import { isLoggedIn, Authorization } from './utils/auth.js';
import { User } from './db/User.js';
import Main from '../layouts/Main.astro';
import CanvasBg from '../layouts/CanvasBg.astro';

const user = await isLoggedIn(Astro.request);
if(!user.authed) {
	return Astro.redirect('/');
}

let subscription;
if(!!user?.active) {
	try {
		await mongoose.connect(import.meta.env.MONGODB_ADDON_URI);
	} catch {}
	const mongoUser = await User.findOne({id: user.id});
  subscription = await fetch(`https://api.mollie.com/v2/customers/${mongoUser.mollieId}/subscriptions/${mongoUser.subscriptionId}`,
    { headers: {...Authorization} }
  ).then(r => r.json());
}
---
<style>
	.settings-page-bg {
		padding-left: 40px;
		padding-right: 40px;
		background: rgb(233, 233, 233);
		height: calc(100vh - 64px);
	}

	.settings-container {
		padding-top:40px;
		width: 45%;
		margin-left: auto;
		margin-right: auto;
	}

	h1 {
		font-size: 26px;
	}

	h1 ~ h1 {
		margin-top: 30px;
	}

	.row {
		display: flex;
	}

	.row dt {
		font-weight: 500;
	}

	.row dt {
		flex-basis: 14%;
	}

	a.linkbutton-main {
		margin-top: 40px;
	}

	.not-subscribed {
		font-weight: 500;
	}

	@media (max-width: 1200px) {
		.settings-container {
			width: 75%;
		}
	}

	@media (max-width: 800px) {
		.settings-container {
			width: 100%;
		}

		.settings-page-bg {
			padding-left: 8px;
			padding-right: 8px;
		}

		.row dt {
			flex-basis: 20%;
		}
	}

	.status {
    padding-left: 6px;
    padding-right: 6px;
    font-weight: 500;
    border-radius: 4px;
  }

  .active, .paid {
    background: #4cd964;
    color: white;
  }

  .open,
  .pending {
    background: #fcb100;
    color: white;
  }

  .canceled,
  .completed,
  .expired,
  .suspended {
    background: #b3b3b3;
    color: white;
  }

  .failed {
    background: rgb(217, 76, 128);
    color: white;
  }

	.row {
		display: flex;
	}

	.row dt {
		font-weight: 500;
	}

	.row dt {
		flex-basis: 50%;
	}
</style>

<Main title="Settings" user={user}>
	<CanvasBg>
		<h1>Details</h1>
		<div class="card">
			<dl>
				<div class="row">
					<dt>Name</dt>
					<dd>{user.name}</dd>
				</div>
				<div class="row">
					<dt>Email</dt>
					<dd>{user.email}</dd>
				</div>
			</dl>
		</div>
		
		<h1>Subscriptions</h1>
		<div class="card">
			{user.active 
				? <div>
						<h2>Mental Gymnastics of Service Worker</h2>


						<div class="row">
							<dt>status</dt>
							<dd><span class={`${subscription?.status} status`}>{subscription?.status}</span></dd>
						</div>
						<div class="row">
							<dt>createdAt</dt>
							<dd>{new Date(subscription?.createdAt).toUTCString()}</dd>
						</div>
						<div class="row">
							<dt>startDate</dt>
							<dd>{new Date(subscription?.startDate).toUTCString()}</dd>
						</div>
						<div class="row">
							<dt>nextPaymentDate</dt>
							<dd>{new Date(subscription?.nextPaymentDate).toUTCString()}</dd>
						</div>
						<div class="row">
							<dt>description</dt>
							<dd>{subscription?.description}</dd>
						</div>
						<div class="row">
							<dt>amount</dt>
							<dd>{subscription?.amount?.currency} {subscription?.amount?.value}</dd>
						</div>
						
						<br/>

						<p>You are subscribed. Would you like to cancel?</p>
						<a class="linkbutton-secondary outline" href="/mollie/cancel-subscription">Cancel</a>
					</div>
				: <div>
					<p class="not-subscribed">You are not subscribed.</p>
					<p>Would you like to subscribe?</p>
					<a class="linkbutton-secondary outline" href="/sw/subscribe#register">Subscribe</a>
				</div>
			}
		</div>
		<a class="linkbutton-main" href="/auth/logout">Sign out</a>
	</CanvasBg>
</Main>
